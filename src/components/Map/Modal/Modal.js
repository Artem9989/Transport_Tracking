import React from "react"
import './Modal.css'
import { Modal, Button } from 'antd';

export const ModalWindowMemo = ({ ShowModal, toggleModal, dontShowModal }) => {
    return (
       
        <Modal
        title="Памятка пользования картой" 
        visible={ShowModal} 
        onOk={toggleModal} 
        okText='Ознакомлен'
        onCancel={toggleModal}
        style={{ top: 20}}
        width= {'80%'}
        cancelButtonProps={{ style: { display: 'none' } }}
        >
            
                <span slot="title"> Мониторинг средств автотранспорта</span>
                <br/>
                <br/>
                <b>Описания</b>
                <br/>
                <br/>
                Это веб - приложение разработано как аналитический инструмент, который предоставляет информацию о поездка ТС, расход их топлива, стоимость поездки и путь, и др. информацию для аналитики. Водители могут отследить свой маршрут и посмотреть информацию. Диспетчеры могут отследить откланения, высчитать стоимость поездки, просмотреть информацию поездки или поездок, расход бензина и составить отчет. Администраторы могут установить роли зарегистрированных пользователей, внести правки в информацию и добавить новое ТС.

                <br/>
                <br/> 
                <b>Функции данных</b>
                <br/>
                <br/>
               Для пилотного проекта создали базу данных, вынесли в облочный сервис и по запросам получаем информацию необходимую.
                <br/>
                <br/> 
                <b>Функциональность карты</b>
                <br/>
                <br/> 
                Это веб-приложение показывает подробную информацию каждое ТС. Вы можете выбрать автомобиль/водителя и видеть каждое ТС. Также есть возможность просмотреть альтернативные пути. Его скорость на момент проезда в выбранной точке (требуется нажать на точку на пути). Также выделяются платные дороги. Кроме того, он предоставляет навигационные функции, которые предлагают вам лучшие маршруты, в зависимости от дорожных ситуаций.
                <br/>
                <br/>
                Для того чтобы создать маршрут, щелкните правой кнопкой мыши на нужной начальной точке и выберите в меню “добавить путевую точку”, затем снова сделайте правый клик на второе место, так можно установить путь по нескольким контрольным точкам.
                В дополнение к функции маршрутизации вы также можете видеть в радиусе любого заданного расстояния от ТС, до куда есть возможность доехать за определенное время (поможет в случает непредвиденных ситуациях), для этого надо нажать правую кнопку мыши и выбрать "Расчитать изолинию".
                Удаление изолинии и маршрута возможно также по правой кнопки мыши, а также сохранить изолинию.
                <br/>
                <br/> 
                <b>Техническое описание</b>
                <br/>
                <br/> 

                Приложение было реализовано с помощью <a href="https://developer.here.com/documentation/studio/map_customization_suite_cli_hlp/dev_guide/index.html?cid=Coronavirus-coronavirusmap-CM-0-Dev-&utm_source=coronavirusmap&utm_medium=referral&utm_campaign=Online_Coronavirus_Dev_2020" target="_blank">HERE Data Hub </a> для хранения и обновления информации о больницах в режиме реального времени.
В качестве источника данных мы решили использовать портал DIVI. Веб-приложение мы реализовали с использованием эффективного набора инструментов, включая <a href="https://developer.here.com/develop/javascript-api?cid=Coronavirus-coronavirusmap-CM-0-Dev-&utm_source=coronavirusmap&utm_medium=referral&utm_campaign=Online_Coronavirus_Dev_2020" target="_blank">ЗДЕСЬ JavaScript API</a>.
Можно настроить маршруты на основе информации о дорожном движении и типе транспортного средства.
                <br/>
                <br/>
                Чтобы пользователи могли создавать маршруты, мы использовали API маршрутизации HERE, который помогает заказывать до 100 точек на маршруте. И, наконец, изохроны также вычисляются с помощью API маршрутизации HERE.
                {/* {
                    localStorage.getItem("modal") !== "false" ?
                        <lui-button slot="controls" secondary onClick={dontShowModal}>Don't show again</lui-button>
                    :
                    <></>
                    
                } */}
           </Modal>

    )
}