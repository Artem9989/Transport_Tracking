[{"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\index.js":"1","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\App.js":"2","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\redux-store.js":"3","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\App-reducer.js":"4","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\FirstWindow.jsx":"5","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\AuthenticationWindow.jsx":"6","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\Common\\Preloader\\Preloader.jsx":"7","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\Auth-reducer.js":"8","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\Driver-reducer.js":"9","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\Register-reducer.js":"10","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\Map\\DisplayMapClass.js":"11","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\Login\\Login.jsx":"12","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\Login\\Register.jsx":"13","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\driver\\drivers.jsx":"14","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\api\\api.js":"15","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\utils\\validators\\objects-helpers.js":"16","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\utils\\validators\\Validators.js":"17","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\Common\\FormsControls\\FormsControls.js":"18","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\driver\\driver.jsx":"19","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\driver\\driverContainer.jsx":"20","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\Driver-selector.js":"21","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\HOC\\withAuthRedirect.js":"22","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\Common\\Paginator\\Paginator.jsx":"23","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\AdminPanel\\AdminAuth.jsx":"24","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\AuthAdmin-reducer.js":"25","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\AdminPanel\\AdminAuthContainer.jsx":"26","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\AdminPanel\\AdminPanel.jsx":"27","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\Auth-selector.js":"28","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\AdminPanel\\AllUsers.jsx":"29","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\AdminPanel\\AllUsersContainer.jsx":"30","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\NotFound\\NotFound.jsx":"31"},{"size":244,"mtime":1612215174372,"results":"32","hashOfConfig":"33"},{"size":1890,"mtime":1612215192093,"results":"34","hashOfConfig":"33"},{"size":940,"mtime":1612780532936,"results":"35","hashOfConfig":"33"},{"size":950,"mtime":1611846910354,"results":"36","hashOfConfig":"33"},{"size":1945,"mtime":1612273816947,"results":"37","hashOfConfig":"33"},{"size":857,"mtime":1612044266525,"results":"38","hashOfConfig":"33"},{"size":298,"mtime":1610041839803,"results":"39","hashOfConfig":"33"},{"size":3354,"mtime":1612806333516,"results":"40","hashOfConfig":"33"},{"size":4955,"mtime":1612806333521,"results":"41","hashOfConfig":"33"},{"size":2237,"mtime":1612044752522,"results":"42","hashOfConfig":"33"},{"size":1792,"mtime":1612222363822,"results":"43","hashOfConfig":"33"},{"size":2786,"mtime":1612806333512,"results":"44","hashOfConfig":"33"},{"size":8845,"mtime":1612214876015,"results":"45","hashOfConfig":"33"},{"size":2276,"mtime":1612222276646,"results":"46","hashOfConfig":"33"},{"size":2336,"mtime":1612806333504,"results":"47","hashOfConfig":"33"},{"size":222,"mtime":1610016964005,"results":"48","hashOfConfig":"33"},{"size":510,"mtime":1610016963993,"results":"49","hashOfConfig":"33"},{"size":837,"mtime":1610017359695,"results":"50","hashOfConfig":"33"},{"size":1272,"mtime":1612222465631,"results":"51","hashOfConfig":"33"},{"size":3245,"mtime":1612806333514,"results":"52","hashOfConfig":"33"},{"size":1032,"mtime":1612032997469,"results":"53","hashOfConfig":"33"},{"size":670,"mtime":1612044267075,"results":"54","hashOfConfig":"33"},{"size":1528,"mtime":1610017359726,"results":"55","hashOfConfig":"33"},{"size":2589,"mtime":1612806333506,"results":"56","hashOfConfig":"33"},{"size":4167,"mtime":1612806333519,"results":"57","hashOfConfig":"33"},{"size":661,"mtime":1612275112916,"results":"58","hashOfConfig":"33"},{"size":1785,"mtime":1612806333508,"results":"59","hashOfConfig":"33"},{"size":90,"mtime":1612022074699,"results":"60","hashOfConfig":"33"},{"size":8876,"mtime":1612806333509,"results":"61","hashOfConfig":"33"},{"size":2970,"mtime":1612806333511,"results":"62","hashOfConfig":"33"},{"size":666,"mtime":1612201400517,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"pi4ky2",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"66"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\index.js",[],["142","143"],"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\App.js",["144","145"],"import React from 'react';\nimport FirstWindow from './components/FirstWindow';\nimport DriversContainer from './components/driver/driverContainer';\nimport AuthenticationWindow from './components/AuthenticationWindow';\nimport AllUsersContainer from './components/AdminPanel/AllUsersContainer'\nimport { Switch, BrowserRouter as Router, Redirect, withRouter, Route } from 'react-router-dom';\nimport NotFound from './components/NotFound/NotFound'\nimport { createBrowserHistory } from 'history';\nimport { connect,Provider } from 'react-redux';\nimport { compose } from 'redux';\nimport store from './redux/redux-store.js'\nimport { initializeApp } from './redux/App-reducer';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport AdminAuthContainer from './components/AdminPanel/AdminAuthContainer';\nimport './Styles/main.css'\nimport './Styles/App.css'\nimport 'antd/dist/antd.css';\n\nexport const history = createBrowserHistory();\n\n\nconst App = (props) => {\n\n\tif (props.initialized) {\n\t\treturn <Preloader />\n\t  }\n\n\n\treturn (\n\t\t<>\n\n\t\t\t\t<Switch>\n\t\t\t\t\t{/* {token &&   <Route path='/main' component={FirstWindow}/>}\n          \t\t\t{!token && <Route path='/login' component={AuthenticationWindow}/> }\n\t\t\t\t\t */}\n\t\t\t\t\t <Route path='/main' component={FirstWindow}/>\n\t\t\t\t\t<Route path='/admin' component={AdminAuthContainer} />\n\t\t\t\t\t<Route path='/adminPanel' component={AllUsersContainer} />\n\t\t\t\t\t\n\t\t\t\t\t<Route path='/login' component={AuthenticationWindow}/>\n\t\t\t\t\t<Route path=\"*\" component={NotFound} />\n\t\t\t\t</Switch>\n\t\t\t\t\n\t\t</>\n\t);\n}\n\n\n\nconst mapStateToProps = (state) => ({\n\tinitialized: state.app.initialized\n  })\n  \n  let AppContainer = compose(withRouter, connect(mapStateToProps, { initializeApp }))(App);\n  \n  const TransportTracking = (props) => {\n\treturn <Router>\n\t  <Provider store={store}>\n\t\t<AppContainer />\n\t  </Provider>\n\t  </Router>\n  }\n  \n  export default TransportTracking;\n\n  ","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\redux-store.js",[],"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\App-reducer.js",[],"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\FirstWindow.jsx",["146","147","148","149","150","151"],"import React, { useState } from 'react'\r\n// import Ymaps from './Ymaps'\r\nimport { useDispatch} from 'react-redux'\r\nimport DriversContainer from './driver/driverContainer'\r\nimport {DisplayMapFC} from './Map/DisplayMapClass';\r\nimport {DisplayMapClass} from './Map/DisplayMapClass';\r\n// import ReactDOM from \"react-dom\";\r\nimport HEREMap from \"react-here-map\"\r\nimport { logout } from '../redux/Auth-reducer';\r\nimport {  BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\r\nimport { withAuthRedirect } from './HOC/withAuthRedirect'\r\nimport { connect } from 'react-redux';\r\n //import HPlatform, { HMap, HMapPolyLine } from \"react-here-map\";\r\n import './FirstWindow.css';\r\n\r\n\r\nconst FirstWindow = () => {\r\n\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const out = () => {\r\n   \r\n    dispatch(logout())\r\n    window.location.reload();\r\n  }\r\n\r\n\r\n  // points = [\r\n  //   { lat: 52.5309825, lng: 13.3845921 },\r\n  //   { lat: 52.5311923, lng: 13.3853495 },\r\n  //   { lat: 52.5313532, lng: 13.3861756 },\r\n  //   { lat: 52.5315142, lng: 13.3872163 },\r\n  //   { lat: 52.5316215, lng: 13.3885574 },\r\n  //   { lat: 52.5320399, lng: 13.3925807 },\r\n  //   { lat: 52.5321472, lng: 13.3935785 },\r\n  // ];\r\n\r\n    return (<> \r\n      <div className='header'>\r\n        <img src='https://www.clipartmax.com/png/middle/44-444084_mark-of-el-by-jamesng8-mark-of-el-by-jamesng8-logo-superman.png' alt=\"\" className=\"logo\"/>\r\n        \r\n        <DriversContainer /> \r\n        <button id='Exit' className=\"Exit\" onClick={out}> Выход </button>\r\n   \r\n         </div>\r\n\r\n         <div id = \"YMapsID\"><DisplayMapClass /> </div>\r\n      \r\n        \r\n        \r\n\r\n        {/* < HEREMap  \r\n                appId = \"{your app_id}\" \r\n                appCode = \"{your app_code}\" \r\n                center = { center} \r\n                zoom = { 14 } \r\n            />  */}\r\n      \r\n\r\n\r\n      \r\n      </>\r\n    )\r\n  }\r\n\r\n\r\nexport default connect(withAuthRedirect)(FirstWindow);\r\n","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\AuthenticationWindow.jsx",[],"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\Common\\Preloader\\Preloader.jsx",[],"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\Auth-reducer.js",[],"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\Driver-reducer.js",["152","153"],"import { driversAPI , authAPI } from '../api/api';\r\nimport {updateObjectInArray } from './utils/validators/objects-helpers'\r\n\r\n\r\nlet SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nlet SET_DRIVERS = 'SET_DRIVERS';\r\nlet SET_TOTAL_DRIVERS_COUNT = 'SET_TOTAL_DRIVERS_COUNT';\r\nlet SET_ADD_DRIVERS = 'SET_ADD_DRIVERS';\r\n// let TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\n// let TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\"\r\n\r\nlet initialState = {\r\n    drivers: [],\r\n    pageSize: 25,\r\n    totalDriversCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    FollowingInProgress: [],\r\n    newDriver: [{\r\n        id: null,\r\n        vehicleNumber: null,\r\n        vehicleType: null\r\n    }]\r\n}\r\n\r\nconst driversReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_DRIVERS: {\r\n            return { ...state, drivers: action.drivers}// users: action.users [...state.users, action.users]\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage };\r\n        }\r\n        case SET_TOTAL_DRIVERS_COUNT: {\r\n            return { ...state, totalDriversCount: action.count }\r\n        }\r\n        case SET_ADD_DRIVERS: {\r\n            return {...state, newDriver: action.newDriver}\r\n        }\r\n        // case TOGGLE_IS_FETCHING: {\r\n        //     return { ...state, isFetching: action.isFetching }\r\n        // }\r\n        // case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n        //     return {\r\n        //         ...state,\r\n        //         FollowingInProgress: action.isFetching\r\n        //             ? [...state.FollowingInProgress, action.userId]\r\n        //             : state.FollowingInProgress.filter(id => id !== action.userId)\r\n        //     }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const SetCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const SetTotalDriversCount = (totalDriversCount) => ({ type: SET_TOTAL_DRIVERS_COUNT, count: totalDriversCount })\r\nexport const setDrivers = (drivers) => ({ type: SET_DRIVERS, drivers });\r\nexport const SetAddDrivers = (id,vehicleNumber,vehicleType) => ({ type: SET_ADD_DRIVERS, newDriver:{ id,vehicleNumber,vehicleType} });\r\n// export const ToggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\n// export const ToggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\n\r\n// export const getUserData = () =>  (dispatch) => {\r\n//     let response = await driversAPI.getUsers()\r\n//     if (response.data.resultCode === 0) {\r\n//         dispatch((id, login, email, true));\r\n//     }\r\n// };\r\n// export const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n//     let emailAndPassword= {email,password}\r\n//     try {\r\n//         let response = await authAPI.login(emailAndPassword.email, emailAndPassword.password, rememberMe)\r\n//         localStorage.setItem('accessToken', response.data.data.accessToken)     \r\n           \r\n//     } catch(error){  \r\n//         let message = error.response.data.data.message;\r\n\r\n//     }\r\n// }\r\n\r\n\r\nexport const requestDrivers = (currentPage,pageSize) => {\r\n    return async (dispatch) => {\r\n    // dispatch(ToggleIsFetching(true));\r\n   let data = await driversAPI.getDrivers(currentPage, pageSize)\r\n            let items = data.data\r\n          dispatch(setDrivers(items));\r\n        //   dispatch(login());\r\n        \r\n          \r\n            // dispatch( ToggleIsFetching(false));\r\n            // dispatch(setDrivers(response.id));\r\n            // dispatch(SetTotalDriversCount(data.totalCount));\r\n}\r\n}\r\n\r\nexport const addDrivers = (id,vehicleNumber,vehicleType) => {\r\n    return async (dispatch) => {\r\n   let data = await driversAPI.addDrivers(id,vehicleNumber,vehicleType)\r\n\r\n          dispatch(SetAddDrivers(id,vehicleNumber,vehicleType));\r\n\r\n}\r\n}\r\n\r\n\r\n// const followUnFollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n//     dispatch(ToggleFollowingProgress(true, userId));\r\n//     let response = await apiMethod(userId)\r\n//     if (response.data.resultCode === 0) {\r\n//         dispatch(actionCreator(userId));\r\n//     }\r\n//     dispatch(ToggleFollowingProgress(false, userId));\r\n// }\r\n\r\n// export const Follow = (userId) => {\r\n//     return async (dispatch) => {\r\n//         followUnFollowFlow(dispatch, userId, driversAPI.Follow.bind(driversAPI), FollowSuccess);\r\n//     }\r\n// }\r\n\r\n// export const UnFollow = (userId) => {\r\n//     return async (dispatch) => {\r\n//         followUnFollowFlow(dispatch, userId, driversAPI.UnFollow.bind(driversAPI), UnFollowSuccess);\r\n\r\n//         // dispatch(ToggleFollowingProgress(true, userId));\r\n//         // let response = apiMethod(userId)\r\n//         // if (response.data.resultCode === 0) {\r\n//         //     dispatch(actionCreator(userId));\r\n//         // }\r\n//         // dispatch(ToggleFollowingProgress(false, userId));\r\n//     }\r\n// }\r\nexport default driversReducer;","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\Register-reducer.js",[],"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\Map\\DisplayMapClass.js",["154","155"],"import * as React from 'react';\r\n\r\n\r\nexport class DisplayMapClass extends React.Component {\r\n  mapRef = React.createRef();\r\n\r\n  state = {\r\n    // The map instance to use during cleanup\r\n    map: null\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    const H = window.H;\r\n    const platform = new H.service.Platform({\r\n      'apikey': 'sAR34-R5unCz4RhUywXkiVOV5QTf_B0OMhyhYhUnFJ8'\r\n    });\r\n\r\n    const defaultLayers = platform.createDefaultLayers();\r\n    // const routeArrows = new H.map.Polyline(linestring, {\r\n    //   style: {\r\n    //     lineWidth: 10,\r\n    //     fillColor: 'white',\r\n    //     strokeColor: 'rgba(255, 255, 255, 1)',\r\n    //     lineDash: [0, 2],\r\n    //     lineTailCap: 'arrow-tail',\r\n    //     lineHeadCap: 'arrow-head'\r\n    //   }\r\n    // });\r\n    // Create an instance of the map\r\n    const map = new H.Map(\r\n      this.mapRef.current,\r\n      defaultLayers.vector.normal.map,\r\n      {\r\n        center: { lng: 55.9678, lat: 54.7431},\r\n        zoom: 14,\r\n        pixelRatio: window.devicePixelRatio || 1\r\n      }\r\n    );\r\n\r\n    // MapEvents enables the event system\r\n    // Behavior implements default interactions for pan/zoom (also on mobile touch environments)\r\n    // This variable is unused and is present for explanatory purposes\r\n    const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));\r\n\r\n    // Create the default UI components to allow the user to interact with them\r\n    // This variable is unused\r\n    const ui = H.ui.UI.createDefault(map, defaultLayers);\r\n\r\n    this.setState({ map });\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   this.state.map.dispose();\r\n  // }\r\n\r\n\r\n  render() {\r\n    return (\r\n      // Set a height on the map so it will display\r\n      <div ref={this.mapRef} style={{ height: \"100%\", width: \"100%\"}} />\r\n    );\r\n  }\r\n}","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\Login\\Login.jsx",[],"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\Login\\Register.jsx",["156"],"import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../Common/FormsControls/FormsControls'\r\nimport { required } from '../../redux/utils/validators/Validators'\r\nimport { connect } from 'react-redux';\r\nimport { register } from '../../redux/Register-reducer'\r\nimport { Redirect } from 'react-router-dom';\r\nimport LoginCSS from './Login.module.css';\r\n\r\n// const Register = (props) => {\r\n//     const [first_name, setFirst_name] = useState('');\r\n//     const [last_name, setLast_name] = useState('');\r\n//     const [middle_name, setMiddle_name] = useState('');\r\n//     const [pass_one, setPassword_one] = useState('');\r\n//     const [pass_confirm, setPassword_confirm] = useState('');\r\n//     const [login, setLogin] = useState('');\r\n//     const [email, setEmail] = useState('');\r\n\r\n//     const onChangeLogin = ({ target: { value } }) => {\r\n//         setLogin(value)\r\n//     }\r\n//     const onChangeFirst_name = ({ target: { value } }) => {\r\n//         setFirst_name(value)\r\n//     }\r\n//     const onChangeLast_name = ({ target: { value } }) => {\r\n//         setLast_name(value)\r\n//     }\r\n//     const onChangeMiddle_name = ({ target: { value } }) => {\r\n//         setMiddle_name(value)\r\n//     }\r\n//     const onChangePass_one = ({ target: { value } }) => {\r\n//         setPassword_one(value)\r\n//     }\r\n//     const onChangePass_confirm = ({ target: { value } }) => {\r\n//         setPassword_confirm(value)\r\n//     }\r\n//     const onChangeEmail = ({ target: { value } }) => {\r\n//         setEmail(value)\r\n//     }\r\n\r\n//     const doRegister = () => {\r\n//         if ((pass_one && pass_confirm && first_name && login && last_name && middle_name && email) !== '') {\r\n//             if (pass_one.length < 5) {\r\n//                 // Пользователь ввел пароль меньше 5 символов\r\n//                 alert(\"Пароль должен быть не меньше 5 символов!\");\r\n//             } else if (pass_one === pass_confirm) {\r\n//                 // Регестрируем пользователя\r\n\r\n//                 // !!!!!!!! Поле mail никуда не записывается в меру функции создания пользователя в API\r\n//                 axios.post('http://www.webapiroads.somee.com/api/account/register', {\r\n//                     Login: login,\r\n//                     Password: pass_one,\r\n//                     //    Password: pass_two,\r\n//                     FirstName: first_name,\r\n//                     LastName: last_name,\r\n//                     MiddleName: middle_name,\r\n//                     Email: email\r\n//                 },\r\n//                     {\r\n//                         headers: {\r\n//                             'Access-Control-Allow-Origin': 'http://www.webapiroads.somee.com',\r\n//                             'X-Requested-With': 'XMLHttpRequest',\r\n//                             'Accept': 'application/json',\r\n//                             'Content-Type': 'application/json'\r\n//                         }\r\n//                     })\r\n\r\n//                     // Если запрос успешен\r\n//                     .then(function (response) {\r\n//                         console.log(response);\r\n//                     })\r\n//                     // Если запрос с ошибкой\r\n//                     .catch(function (response) {\r\n//                         alert(response.response.data.data.message);\r\n//                         /*        if (error.message = \"Request failed with status code\") {\r\n//                                     alert(\"Oops! Пользователь с таким логином уже существует. :c\");\r\n//                                 }*/\r\n//                     });\r\n//             } else {\r\n//                 // Пользователь ввел несовпадающие пароли\r\n//                 alert(\"Пароли не совпадают!\");\r\n//             }\r\n//         } else {\r\n//             // Пользователь ввел не все поля\r\n//             alert(\"Заполните все поля!\");\r\n//         }\r\n//     }\r\n\r\n\r\n\r\n\r\nconst RegisterForm = ({handleSubmit , error, changingPage}) => {\r\n\r\n    return (<div id=\"register\" className={`${LoginCSS.wrapper__register} ${LoginCSS.form}`}>\r\n\r\n    <form onSubmit={handleSubmit}>\r\n        \r\n    <h1> Регистрация </h1>\r\n        \r\n        <div className={LoginCSS.uname}>\r\n            <label htmlFor=\"Emailsignup\" className={LoginCSS.uname} data-icon=\"p\">Ваша e-mail </label>\r\n            <Field name={\"email\"} placeholder={\"Ваша почта (@mail)\"} component={Input} validate={[required]} />\r\n        </div>\r\n        <div className={LoginCSS.uname}>\r\n            <label htmlFor=\"LoginSignup\" className={LoginCSS.uname} data-icon=\"p\">Ваша login </label>\r\n            <Field name={\"login\"} placeholder={\"Ваша login\"} component={Input} validate={[required]} />\r\n        </div>\r\n        <label htmlFor=\"first_namesignup\" className=\"wrapper__register_first_name\" data-icon=\"e\">Имя</label>\r\n        <div className={LoginCSS.youpasswd}>\r\n            <Field name={\"firstName\"} placeholder={\"Иван\"} component={Input} validate={[required]} />\r\n        </div>\r\n        <label htmlFor=\"last_namesignup\" className=\"wrapper__register_last_name\" data-icon=\"e\">Фамилия</label>\r\n        <div className={LoginCSS.youpasswd}>\r\n            <Field name={\"lastName\"} placeholder={\"Иванов\"}  component={Input} validate={[required]} />\r\n        </div>\r\n        <label htmlFor=\"middle_namesignup\" className=\"wrapper__register_middle_name\" data-icon=\"e\">Отчество</label>\r\n        <div className={LoginCSS.youpasswd}>\r\n            <Field name={\"middleName\"} placeholder={\"Иванович\"} component={Input} validate={[required]} />\r\n        </div>\r\n        <label htmlFor=\"password\" className={LoginCSS.youpasswd} data-icon=\"p\"> Ваш пароль </label>\r\n        <div className={LoginCSS.youpasswd}>\r\n            <Field name={\"password_oneSignup\"} placeholder={\"Введите пароль\"} type={\"password\"} component={Input} validate={[required]} />\r\n        </div>\r\n        <label htmlFor=\"password\" className={LoginCSS.youpasswd} data-icon=\"p\"> Подтвердите ваш пароль </label>\r\n        <div className={LoginCSS.youpasswd}>\r\n            <Field name={\"password_twoSignup\"} placeholder={\"Повторите пароль\"} type={\"password\"} component={Input} validate={[required]} />\r\n        </div>\r\n        <div>\r\n            <Field name={\"rememberMe\"} type={\"checkbox\"} component={Input} /> Запомнить меня\r\n    </div>\r\n        {error && <div className={LoginCSS.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n\r\n        <div className={`${LoginCSS.wrapper__register_button}  ${LoginCSS.button}`}>\r\n\r\n            <button>Регистрация</button>\r\n        </div>\r\n\r\n    </form>     \r\n    <p>\r\n                <label htmlFor=\"roledsignup\" className=\"wrapper__register_role\" data-icon=\"p\"> Выберите роль </label>\r\n                <select size=\"4\" multiple name=\"Role[]\">\r\n                <option disabled> Выберите роль</option>\r\n                    <option value=\"Role_One\">Водитель </option>\r\n                    <option value=\"Role_Two\">Менеджер</option>\r\n                    </select>\r\n            </p>\r\n            {/* <p className=\"wrapper__register_button button\">\r\n                <input id=\"btnRegister\" type=\"submit\" value=\"Регистрация\" onClick={onSubmit} />\r\n            </p> */}\r\n\r\n       <p className={` ${LoginCSS.wrapper__login_change} ${LoginCSS.button}`}>\r\n       Уже зарегистрированы ?\r\n           <button className={LoginCSS.to_login} onClick={changingPage}> Присоединится</button>\r\n    </p>\r\n</div>\r\n    )\r\n}\r\n\r\nconst RegisterReduxFrom = reduxForm({ form: 'register' })(RegisterForm);\r\n\r\nconst Register = (props) => {\r\n    // if (props.registeredSuccess) {\r\n    //     return <Redirect to={\"/authentication\"} />\r\n    // }\r\n    \r\n    const onSubmit = (formData) => {\r\n        if(formData.password_oneSignup === formData.password_twoSignup){\r\n            props.register(formData.email, formData.login,\r\n                             formData.firstName, formData.lastName,\r\n                             formData.middleName, formData.password_oneSignup)\r\n        }\r\n        else {\r\n            alert(\"Пароли не совпадают\")\r\n        }\r\n    }\r\n\r\n \r\n\r\n    return <div>\r\n        <RegisterReduxFrom onSubmit={onSubmit} changingPage={props.changingPage}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    registeredSuccess: state.registerPage.registeredSuccess,\r\n\r\n})\r\nexport default connect(mapStateToProps, { register })(Register);","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\driver\\drivers.jsx",["157","158","159","160","161","162"],"import React, {memo,useDispatch, useState} from 'react';\r\nimport './Leftpanel.css'\r\nimport Driver from './driver'\r\nimport driverContainer from './driverContainer';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\nimport DriverCSS from './driver.module.css'\r\nimport { Drawer, Button, Radio, Space } from 'antd';\r\nimport { logout } from '../../redux/Auth-reducer';\r\n\r\nconst Drivers = ({currentPage,onPageChanged, totalItemsCount, pageSize, drivers, ...props}) => {\r\n\r\n\r\n\r\n    const [Visible, setVisible] = useState(false)\r\n \r\n    const changingPage = () => {\r\n        setVisible(!Visible)\r\n    }\r\n\r\n \r\n    return <>\r\n      \r\n\r\n        <Space>\r\n          <Button \r\n          style={{fontSize: '20px', \r\n          padding: '8px 15px',\r\n          width:'100px',\r\n           margin:'0px',\r\n           fontWeight: 'bold',\r\n            height: '5vh',\r\n            textTransform: 'uppercase',\r\n            fontFamily: `'Roboto Condensed', Тahoma, sans-serif`\r\n             }} type=\"primary\" onClick={setVisible}>\r\n            Меню\r\n          </Button>\r\n        </Space>\r\n        <Drawer\r\n        width={360}\r\n          title=\"Водители:\"\r\n          placement={'left'}\r\n        //   closable={true}\r\n          onClose={changingPage}\r\n          visible={Visible}\r\n          key={'left'}\r\n          getContainer={false}\r\n          zIndex={10}\r\n        >\r\n             <p>\r\n                {  drivers.map((driver,index) => <Driver driver={driver} index={index}/>)}\r\n        </p>\r\n        </Drawer>\r\n\r\n\r\n\r\n  \r\n        {/* <input type=\"checkbox\" id=\"side-checkbox\" />\r\n        <div className=\"side-panel\">\r\n            <label id='side-button-2' className=\"side-button-2\" htmlFor=\"side-checkbox\">+</label>\r\n            <div className=\"side-title\">Меню:</div>\r\n            <p>Водители:</p>\r\n            <div>\r\n  \r\n\r\n                  {  drivers.map((driver,index) => <Driver driver={driver} index={index}/>)}\r\n       \r\n            \r\n            </div>\r\n        </div>\r\n        <div className=\"side-button-1-wr\">\r\n            <label className=\"side-button-1\" htmlFor=\"side-checkbox\">\r\n                <div id='side-open' className=\"side-b side-open\">Меню</div>\r\n            </label>\r\n\r\n        </div> */}\r\n        \r\n    </>\r\n\r\n}\r\nexport default memo(Drivers)","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\api\\api.js",["163"],"import * as axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://www.webapiroads.somee.com/',\r\n    headers: {\r\n       \r\n        'X-Requested-With': 'XMLHttpRequest',\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        \"replacecredentials\": \"same-origin\",\r\n        \r\n    }\r\n\r\n});\r\ninstance.interceptors.response.use(function (response) {\r\n    // if( localStorage.getItem('accessToken'))\r\n    return response;\r\n  }, function (error) {\r\n    return Promise.reject(error);\r\n  });\r\n\r\nexport const authAPI = {\r\n    register(email, login, password, firstName, lastName, middleName) {\r\n        return instance.post(`api/account/register`, { email,login, password, firstName, lastName, middleName })\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return (instance.post(`api/account/login`, { email, password })    \r\n        )}\r\n}\r\n\r\nexport const driversAPI = {\r\n\r\n    getDrivers() {\r\n        let token = localStorage.getItem('accessToken')\r\n\r\n        return (instance.get(`/api/driver/getalldrivers`, {\r\n            headers: {'Authorization':'Bearer ' + token}\r\n        \r\n        })\r\n        )},\r\n    addDrivers(id,vehicleNumber,vehicleType) {\r\n        let token = localStorage.getItem('accessToken')\r\n\r\n        return (instance.post(`/api/driver/adddriver`, {id,vehicleNumber,vehicleType }, {\r\n            headers: {'Authorization':'Bearer ' + token}\r\n        \r\n        })        \r\n        )}\r\n\r\n}\r\n\r\nexport const rolesAPI = {\r\n    getAllRoles(){\r\n        let token = localStorage.getItem('accessToken')\r\n        return (instance.get(`/api/roles/getallroles`,{\r\n            headers: {'Authorization':'Bearer ' + token\r\n        }\r\n        \r\n        })\r\n        )},\r\n    getRole(id){\r\n        let token = localStorage.getItem('accessToken')\r\n        return (instance.post(`/api/roles/getallroles`,{id},{\r\n            headers: {'Authorization':'Bearer ' + token\r\n        }\r\n        \r\n        })\r\n        )}\r\n}\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsers(currentPage = 1, pageSize = 25) {\r\n        let token = localStorage.getItem('accessToken')\r\n\r\n        return (instance.get(`/api/account/getusers`, {\r\n            headers: {'Authorization':'Bearer ' + token}\r\n        \r\n        })\r\n\r\n        \r\n        )}\r\n}\r\n\r\n\r\n","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\utils\\validators\\objects-helpers.js",[],"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\utils\\validators\\Validators.js",[],"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\Common\\FormsControls\\FormsControls.js",[],"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\driver\\driver.jsx",["164","165"],"import React, { useEffect, useState } from 'react';\r\nimport DriverCSS from './driver.module.css'\r\n\r\nimport { Collapse } from 'antd'\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst Driver = ({ driver, index, FollowingInProgress }) => {\r\n\r\n\r\n    return (        \r\n    <Collapse >\r\n\r\n        <Panel  showArrow={false} header={                    <div id=\"hider\" className=\"driver-data\"  >\r\n        <div id=\"drivers\" className={DriverCSS.drivers}>\r\n            <img className={DriverCSS.avatar} src='https://f1.upet.com/h_5JB36T9mqa_q.jpg' alt='Фото не загрузилось' />\r\n            <p> № машины: <span className={DriverCSS.infoDriver}> {driver.id} </span> </p>\r\n            </div>\r\n    \r\n        </div>\r\n     } key={index}>\r\n\r\n                <p> Фамилия: <span className={DriverCSS.infoDriver}> {driver.lastName} </span> </p>\r\n    \r\n        \r\n                <p> Имя:  <span className={DriverCSS.infoDriver}> {driver.firstName} </span> </p>\r\n                <p> Отчество: <span className={DriverCSS.infoDriver}> {driver.middleName} </span> </p>\r\n                <p> Номер Телефона : <span className={DriverCSS.infoDriver}> {driver.lastName} </span> </p>\r\n        </Panel>\r\n    </Collapse>\r\n\r\n\r\n    );\r\n}\r\nexport default Driver;","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\driver\\driverContainer.jsx",["166","167"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SetCurrentPage, requestDrivers } from '../../redux/Driver-reducer';\r\nimport Drivers from './drivers';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { withAuthRedirect } from '../HOC/withAuthRedirect'\r\nimport { compose } from 'redux';\r\nimport { getDrivers, getPageSize, getTotalDriversCount, getCurrentPage, getIsFetching, getFollowingInProgress, getIsAuth } from '../../redux/Driver-selector';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Map from '../FirstWindow'\r\nimport { logout } from '../../redux/Auth-reducer';\r\n\r\nclass DriversContainer extends React.Component {\r\n   \r\n    componentDidMount() {\r\n         \r\n        this.props.requestDrivers(this.props.currentPage, this.props.pageSize);\r\n        this.refreshProfile();\r\n    }\r\n\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.requestDrivers(pageNumber, this.props.pageSize);\r\n        this.props.SetCurrentPage(pageNumber)\r\n\r\n    }\r\n    refreshProfile() {\r\n    //     let token = localStorage.getItem('accessToken');\r\n    //     debugger\r\n    //     if (token === null){\r\n    //  //this.props.history.push(\"/login\")\r\n    //           <Redirect to=\"/login\" />\r\n    //         }\r\n    //     else {\r\n    //         <Redirect to=\"/main\" />\r\n    //     }\r\n \r\n    // let token = localStorage.getItem('isAuthToken')\r\n    // debugger\r\n    // if(token === 'true') {\r\n    //     console.log(token) \r\n    //     return  <Redirect to={'/main'} />\r\n    //  }\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate (prevProps, prevState, snapshot){\r\n            this.refreshProfile()\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null}\r\n            <Drivers totalItemsCount={this.props.totalItemsCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                // UnFollow={this.props.UnFollow}\r\n                // Follow={this.props.Follow}\r\n                drivers={this.props.drivers}\r\n                FollowingInProgress={this.props.FollowingInProgress}\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        drivers: getDrivers(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalDriversCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        FollowingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state),\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps,\r\n    {\r\n        // Follow,\r\n        // UnFollow,\r\n        // setUsers,\r\n        logout,\r\n        SetCurrentPage,\r\n        // SetTotalUsersCount,\r\n        // ToggleIsFetching,\r\n        // ToggleFollowingProgress,\r\n        requestDrivers\r\n    }), withAuthRedirect)(DriversContainer);\r\n\r\n// connect(mapStateToProps,\r\n//     {\r\n//         Follow,\r\n//         UnFollow,\r\n//         // setUsers,\r\n//         SetCurrentPage,\r\n//         // SetTotalUsersCount,\r\n//         // ToggleIsFetching,\r\n//         ToggleFollowingProgress,\r\n//         getUsers\r\n//     })(AuthRedurectComponent);","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\Driver-selector.js",["168"],"import { createSelector } from \"reselect\";\r\n\r\nexport const getDrivers = (state) => {\r\n    return state.DriversPage.drivers;\r\n}\r\n\r\n// export const getDriversSelector = (state) => {\r\n//     return getDrivers(state).filter(u => true);\r\n// }\r\n\r\n// export const getDriversSuperSelector =  createSelector(getDrivers, (drivers) => {\r\n//    return drivers.filter(u => true);\r\n// });\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.DriversPage.pageSize;\r\n}\r\n\r\nexport const getTotalDriversCount = (state) => {\r\n    return state.DriversPage.totalDriversCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.DriversPage.currentPage;\r\n}\r\nexport const getIsFetching= (state) => {\r\n    return state.DriversPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.DriversPage.FollowingInProgress;\r\n}\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth;\r\n}\r\n\r\n// сложный селектор с for, math m большие массивы. каунт ретурн","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\HOC\\withAuthRedirect.js",["169"],"import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const  withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n    let token = localStorage.getItem('isAuthToken')\r\n\r\n    if (token == \"false\" || token === null) return <Redirect to = '/login'></Redirect>\r\n   return <Component {...this.props} />\r\n        }\r\n}\r\n\r\n\r\nlet ConnectedAuthRedurectComponent = connect( mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n\r\nreturn ConnectedAuthRedurectComponent;\r\n}","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\Common\\Paginator\\Paginator.jsx",[],"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\AdminPanel\\AdminAuth.jsx",[],"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\AuthAdmin-reducer.js",[],"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\AdminPanel\\AdminAuthContainer.jsx",["170","171"],"import React, { memo, useState } from 'react'\r\nimport LoginCSS from './AdminAuth.module.css';\r\nimport AdminAuth from './AdminAuth';\r\nimport adminPanel from './AdminPanel';\r\n\r\nconst AuthenticationAdminWindow = (props) => {\r\n    \r\n    return <>\r\n        <section>\r\n        <div id=\"container_registration\" >\r\n            <div id=\"wrapper\" className={LoginCSS.wrapper}>\r\n                    \r\n\r\n                            <AdminAuth users = {props.users}/> \r\n                            \r\n                    \r\n                    \r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    </>\r\n\r\n}\r\n\r\n\r\nexport default memo(AuthenticationAdminWindow)","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\AdminPanel\\AdminPanel.jsx",["172","173","174","175"],"import React, {memo, useState} from 'react';\r\nimport Users from './AllUsers.jsx'\r\nimport AdminPanelCSS from './AdminAuth.module.css';\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from '../../redux/AuthAdmin-reducer';\r\nimport { Route } from 'react-router-dom';\r\n// import { withAuthRedirect } from '../HOC/withAuthRedirectwithAuthRedirect'\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../HOC/withAuthRedirect'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst AdminPanel = ({currentPage,onPageChanged,addDrivers , totalItemsCount, pageSize, users, roles, ...props}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const out = () => {    \r\n        dispatch(logout());\r\n        window.location.reload();\r\n      }\r\n\r\n   \r\n\r\n    let token = localStorage.getItem('isAuthAdminToken')\r\n    if(token === null) {\r\n        return  <Redirect to={'/admin'} />\r\n    }\r\n\r\n  \r\n    return <>\r\n\r\n     <div className={AdminPanelCSS.container}>\r\n         <div className={AdminPanelCSS.header_container}>\r\n            <h3>Список зарегистрированных пользователей:</h3>\r\n            <button id='Exit' className=\"Exit\" onClick={out}> Выйти </button>\r\n        </div>\r\n\r\n             \r\n            {/* <Paginator currentPage = {currentPage} onPageChanged={onPageChanged} totalItemsCount ={totalItemsCount} pageSize={pageSize}/> */}\r\n      \r\n            {/* {\r\n                users.map(u => <Users  user={u}/>)\r\n              \r\n            } */}\r\n            <Users  users={users} roles={roles} addDrivers={addDrivers}/>\r\n            \r\n        </div>\r\n\r\n    </>\r\n\r\n}\r\n// export default connect(withAuthRedirect)(AdminPanel);\r\nexport default memo(AdminPanel);\r\n// export default connect(withAuthRedirect)(AdminPanel);","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\redux\\Auth-selector.js",[],"C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\AdminPanel\\AllUsers.jsx",["176","177","178","179","180","181"],"import React, {useEffect, useState} from 'react';\r\n// import './AdminAuth.module.css'\r\nimport { Avatar, Image } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { Select } from 'antd';\r\nimport { Table, Tag, Space } from 'antd';\r\nimport 'antd/lib/button/style/index.css';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nconst { Option } = Select;\r\n\r\nconst User = ({users,FollowingInProgress}) => {\r\n  \r\n  function onChange(value) {\r\n    console.log(`selected ${value}`);\r\n  }\r\n  \r\n  function onBlur() {\r\n    console.log('blur');\r\n  }\r\n  \r\n  function onFocus() {\r\n    console.log('focus');\r\n  }\r\n  \r\n  function onSearch(val) {\r\n    console.log('search:', val);\r\n  }\r\nconsole.log(users)\r\n    // let numberCar = props.numberCar.map( p=> <Driver numberCar={p.numberCar} name={p.name}/>);\r\n    // Clicked === false ? getInfo() : setClicked(false)\r\n    return(<>\r\n\r\n     <Table   loading={false} dataSource={users}>\r\n     <Column\r\n      title=\"Id\"\r\n      key=\"action\"\r\n      render={(text, record) => (\r\n        <Space size=\"middle\">\r\n           {record.id}\r\n        </Space>\r\n      )}\r\n    />\r\n\r\n    <Column\r\n      title=\"Логин\"\r\n      key=\"action\"\r\n      render={(text, record) => (\r\n        <Space size=\"middle\">\r\n           {record.login} \r\n        </Space>\r\n      )}\r\n    />\r\n     <Column\r\n     columnWidth={64}\r\n      title=\"фото\"\r\n      key=\"action\"\r\n      render={(text, record) => (\r\n        <Space size=\"middle\">\r\n           <Avatar size={63} icon={<UserOutlined />} /> \r\n        </Space>\r\n      )}\r\n    />\r\n      \r\n    <ColumnGroup title=\"ФИО\">\r\n      <Column title=\"Имя\" dataIndex=\"firstName\" key=\"firstName\" />\r\n      <Column title=\"Фамилия\" dataIndex=\"lastName\" key=\"lastName\" />\r\n    </ColumnGroup>\r\n    <Column\r\n      title=\"Почта\"\r\n      key=\"action\"\r\n      render={(text, record) => (\r\n        <Space size=\"middle\">\r\n           {record.email}\r\n        </Space>\r\n      )}\r\n    />\r\n    <Column title=\"Телефон\" dataIndex=\"address\" key=\"phone\" />\r\n\r\n    <Column\r\n      title=\"Выбрать роль\"\r\n      key=\"action\"\r\n      render={(text, record) => (\r\n        <Space size=\"middle\">\r\n                <Select\r\n              showSearch\r\n              style={{ width: 100 }}\r\n              placeholder=\"Роль\"\r\n              optionFilterProp=\"children\"\r\n              onChange={onChange}\r\n              onFocus={onFocus}\r\n              onBlur={onBlur}\r\n              onSearch={onSearch}\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n            <Option value=\"Водитель\">Водитель</Option>\r\n            <Option value=\"Менеджер\">Менеджер</Option>\r\n            <Option value=\"Админ\">Админ</Option>\r\n            <Option value=\"Гость\">Гость</Option>\r\n          </Select>\r\n        </Space>\r\n      )}\r\n    />\r\n      <Column\r\n      title=\"Состояние\"\r\n      key=\"action\"\r\n      render={(text, record) => (\r\n        <Space size=\"middle\">\r\n          <a>Заблокировать {record.lastName}</a>\r\n          <a>Разблокировать</a>\r\n        </Space>\r\n      )}\r\n    />\r\n  </Table>\r\n   \r\n        \r\n         \r\n        \r\n         </>\r\n    );\r\n}\r\nexport default User;\r\n\r\n{/* <div  id=\"hider\" className=\"driver-data\"  >\r\n<div id = \"drivers\"  className= {DriverCSS.drivers}>\r\n    {/* <img className= {DriverCSS.avatar} src= 'https://f1.upet.com/h_5JB36T9mqa_q.jpg' alt='Фото не загрузилось' /> */}\r\n    // <Avatar size={64} icon={<UserOutlined />} /> \r\n        // <Avatar size={64} src={user.photos != null ? user.photos : UserOutlined}       style={{\r\n// color: '#f56a00',\r\n// backgroundColor: '#fde3cf',\r\n// borderRadius: 50,\r\n// padding: 5\r\n// }}\r\n// >  {user.firstName}  </Avatar>\r\n        \r\n//       <div className=\"div\"> Фамилия {user.lastName} </div>\r\n//        <div className=\"\">Отчество{user.middleName}</div>\r\n//        <div className=\"\">Логин: {user.login} </div>\r\n//        <div className=\"\">Пароль: {user.password}</div>\r\n//       <div className=\"\"> Почта: {user.email}</div>\r\n//       <Select\r\n//       showSearch\r\n//       style={{ width: 200 }}\r\n//       placeholder=\"Select a person\"\r\n//       optionFilterProp=\"children\"\r\n//       onChange={onChange}\r\n//       onFocus={onFocus}\r\n//       onBlur={onBlur}\r\n//       onSearch={onSearch}\r\n//       filterOption={(input, option) =>\r\n//         option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n//       }\r\n//     >\r\n//     <Option value=\"jack\">Jack</Option>\r\n//     <Option value=\"lucy\">Lucy</Option>\r\n//     <Option value=\"tom\">Tom</Option>\r\n//   </Select>\r\n// <p> № машины: <span className={DriverCSS.infoDriver}> {user.id} </span> </p>\r\n// </div>\r\n// <div id=\"driver-data-add\" className='driver-data-add' >\r\n// <p> Номер Телефона : <span className={DriverCSS.infoDriver}>  </span> </p>\r\n\r\n\r\n// </div>\r\n// </div> */}\r\n","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\AdminPanel\\AllUsersContainer.jsx",["182"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {  requestUsers, requestAllRoles} from '../../redux/AuthAdmin-reducer';\r\nimport AdminPanel from './AdminPanel';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { withAuthRedirect } from '../HOC/withAuthRedirect'\r\nimport { compose } from 'redux';\r\n// import { getDrivers, getPageSize, getTotalDriversCount, getCurrentPage, getIsFetching, getFollowingInProgress, getIsAuth } from '../../redux/Driver-selector';\r\n// import { addDrivers } from '../../redux/Driver-reducer';\r\n\r\nclass AllUsersContainer extends React.Component {\r\n  \r\n    componentDidMount() {\r\n\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n        this.props.requestAllRoles();\r\n        this.refreshProfile();\r\n    }\r\n\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.requestAllRoles();\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n        // this.props.SetCurrentPage(pageNumber)\r\n\r\n    }\r\n    refreshProfile() {\r\n    //     let token = localStorage.getItem('accessToken');\r\n    //     debugger\r\n    //     if (token === null){\r\n    //  //this.props.history.push(\"/login\")\r\n    //           <Redirect to=\"/login\" />\r\n    //         }\r\n    //     else {\r\n    //         <Redirect to=\"/main\" />\r\n    //     }\r\n \r\n    // let token = localStorage.getItem('isAuthToken')\r\n    // debugger\r\n    // if(token === 'true') {\r\n    //     console.log(token) \r\n    //     return  <Redirect to={'/main'} />\r\n    //  }\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate (prevProps, prevState, snapshot){\r\n            this.refreshProfile()\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null}\r\n            <AdminPanel totalItemsCount={this.props.totalItemsCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                // UnFollow={this.props.UnFollow}\r\n                // Follow={this.props.Follow}\r\n                users={this.props.users}\r\n                roles={this.props.roles}\r\n                FollowingInProgress={this.props.FollowingInProgress}\r\n                // addDrivers={this.props.addDrivers}\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.adminAuth.users,\r\n        // addDrivers: addDrivers(state),\r\n        roles: state.adminAuth.roles\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps,\r\n    {\r\n        // addDrivers,\r\n        requestAllRoles,\r\n        requestUsers\r\n    }))(AllUsersContainer);\r\n\r\n\r\n// connect(mapStateToProps,\r\n//     {\r\n//         Follow,\r\n//         UnFollow,\r\n//         // setUsers,\r\n//         SetCurrentPage,\r\n//         // SetTotalUsersCount,\r\n//         // ToggleIsFetching,\r\n//         ToggleFollowingProgress,\r\n//         getUsers\r\n//     })(AuthRedurectComponent);","C:\\Users\\Артем\\Desktop\\transport_tracking\\src\\components\\NotFound\\NotFound.jsx",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":3,"column":8,"nodeType":"189","messageId":"190","endLine":3,"endColumn":24},{"ruleId":"187","severity":1,"message":"191","line":6,"column":43,"nodeType":"189","messageId":"190","endLine":6,"endColumn":51},{"ruleId":"187","severity":1,"message":"192","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"193","line":5,"column":9,"nodeType":"189","messageId":"190","endLine":5,"endColumn":21},{"ruleId":"187","severity":1,"message":"194","line":8,"column":8,"nodeType":"189","messageId":"190","endLine":8,"endColumn":15},{"ruleId":"187","severity":1,"message":"195","line":10,"column":28,"nodeType":"189","messageId":"190","endLine":10,"endColumn":34},{"ruleId":"187","severity":1,"message":"191","line":10,"column":36,"nodeType":"189","messageId":"190","endLine":10,"endColumn":44},{"ruleId":"187","severity":1,"message":"196","line":10,"column":46,"nodeType":"189","messageId":"190","endLine":10,"endColumn":51},{"ruleId":"187","severity":1,"message":"197","line":1,"column":23,"nodeType":"189","messageId":"190","endLine":1,"endColumn":30},{"ruleId":"187","severity":1,"message":"198","line":2,"column":9,"nodeType":"189","messageId":"190","endLine":2,"endColumn":28},{"ruleId":"187","severity":1,"message":"199","line":44,"column":11,"nodeType":"189","messageId":"190","endLine":44,"endColumn":19},{"ruleId":"187","severity":1,"message":"200","line":48,"column":11,"nodeType":"189","messageId":"190","endLine":48,"endColumn":13},{"ruleId":"187","severity":1,"message":"191","line":7,"column":10,"nodeType":"189","messageId":"190","endLine":7,"endColumn":18},{"ruleId":"187","severity":1,"message":"201","line":1,"column":21,"nodeType":"189","messageId":"190","endLine":1,"endColumn":32},{"ruleId":"187","severity":1,"message":"202","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":23},{"ruleId":"187","severity":1,"message":"203","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":17},{"ruleId":"187","severity":1,"message":"204","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":17},{"ruleId":"187","severity":1,"message":"205","line":7,"column":26,"nodeType":"189","messageId":"190","endLine":7,"endColumn":31},{"ruleId":"187","severity":1,"message":"206","line":8,"column":10,"nodeType":"189","messageId":"190","endLine":8,"endColumn":16},{"ruleId":"187","severity":1,"message":"191","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":18},{"ruleId":"187","severity":1,"message":"207","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"187","severity":1,"message":"192","line":1,"column":28,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"191","line":9,"column":10,"nodeType":"189","messageId":"190","endLine":9,"endColumn":18},{"ruleId":"187","severity":1,"message":"208","line":10,"column":8,"nodeType":"189","messageId":"190","endLine":10,"endColumn":11},{"ruleId":"187","severity":1,"message":"209","line":1,"column":10,"nodeType":"189","messageId":"190","endLine":1,"endColumn":24},{"ruleId":"210","severity":1,"message":"211","line":14,"column":15,"nodeType":"212","messageId":"213","endLine":14,"endColumn":17},{"ruleId":"187","severity":1,"message":"192","line":1,"column":23,"nodeType":"189","messageId":"190","endLine":1,"endColumn":31},{"ruleId":"187","severity":1,"message":"214","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":18},{"ruleId":"187","severity":1,"message":"192","line":1,"column":22,"nodeType":"189","messageId":"190","endLine":1,"endColumn":30},{"ruleId":"187","severity":1,"message":"196","line":6,"column":10,"nodeType":"189","messageId":"190","endLine":6,"endColumn":15},{"ruleId":"187","severity":1,"message":"215","line":8,"column":10,"nodeType":"189","messageId":"190","endLine":8,"endColumn":17},{"ruleId":"187","severity":1,"message":"216","line":9,"column":10,"nodeType":"189","messageId":"190","endLine":9,"endColumn":26},{"ruleId":"187","severity":1,"message":"217","line":6,"column":24,"nodeType":"189","messageId":"190","endLine":6,"endColumn":32},{"ruleId":"187","severity":1,"message":"218","line":7,"column":12,"nodeType":"189","messageId":"190","endLine":7,"endColumn":15},{"ruleId":"187","severity":1,"message":"219","line":7,"column":32,"nodeType":"189","messageId":"190","endLine":7,"endColumn":37},{"ruleId":"220","severity":1,"message":"221","line":147,"column":13,"nodeType":"222","endLine":147,"endColumn":16},{"ruleId":"220","severity":1,"message":"221","line":148,"column":13,"nodeType":"222","endLine":148,"endColumn":16},{"ruleId":"223","severity":1,"message":"224","line":247,"column":1,"nodeType":"225","messageId":"226","endLine":249,"endColumn":122},{"ruleId":"187","severity":1,"message":"216","line":6,"column":10,"nodeType":"189","messageId":"190","endLine":6,"endColumn":26},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'DriversContainer' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'useState' is defined but never used.","'DisplayMapFC' is defined but never used.","'HEREMap' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'authAPI' is defined but never used.","'updateObjectInArray' is defined but never used.","'behavior' is assigned a value but never used.","'ui' is assigned a value but never used.","'useDispatch' is defined but never used.","'driverContainer' is defined but never used.","'Paginator' is defined but never used.","'DriverCSS' is defined but never used.","'Radio' is defined but never used.","'logout' is defined but never used.","'useEffect' is defined but never used.","'Map' is defined but never used.","'createSelector' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'adminPanel' is defined but never used.","'connect' is defined but never used.","'withAuthRedirect' is defined but never used.","'Checkbox' is defined but never used.","'Tag' is defined but never used.","'Image' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]